---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: aws-ingress-class
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: ingress.k8s.aws/alb
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-ssl
  annotations:
    # Load Balancer Name
    alb.ingress.kubernetes.io/load-balancer-name: cloudgeeks-app-alb-ingress
    # Ingress Core Settings
    alb.ingress.kubernetes.io/scheme: internet-facing
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'   
    ## SSL Settings
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:831681340916:certificate/dc61063e-dd78-40c6-bab1-4944e63987fe
    # SSL Redirect Setting
    alb.ingress.kubernetes.io/ssl-redirect: '443'
     # Target Type: IP
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: aws-ingress-class   # Ingress Class
  defaultBackend:
    service:
      name: cloudgeeks-app-nodeport-service
      port:
        number: 80     
  rules:
    - http:
        paths:      
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cloudgeeks-app-nodeport-service
                port: 
                  number: 80
    